
/*
To Run this script via any sort of SQL Editor, make sure that '/' is set as the statement delimiter, not ';'
since ';' characters must be inlcluded in the triggers themselves.
*/
	
CREATE OR REPLACE TRIGGER CONTACT_AUTO_ID_TRIG
BEFORE INSERT ON CONTACT
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.CONTACT_ID IS NULL)
BEGIN
	SELECT CONTACT_SEQ.nextval INTO :newRow.CONTACT_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER ENH_NETWORK_AUTO_ID_TRIG
BEFORE INSERT ON ENH_NETWORK
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.ENH_NETWORK_ID IS NULL)
BEGIN
	SELECT ENH_NETWORK_SEQ.nextval INTO :newRow.ENH_NETWORK_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER ENH_REACH_AUTO_ID_TRIG
BEFORE INSERT ON ENH_REACH
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.ENH_REACH_ID IS NULL)
BEGIN
	SELECT ENH_REACH_SEQ.nextval INTO :newRow.ENH_REACH_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER NETWORK_AREA_AUTO_ID_TRIG
BEFORE INSERT ON NETWORK_AREA
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.NETWORK_AREA_ID IS NULL)
BEGIN
	SELECT NETWORK_AREA_SEQ.nextval INTO :newRow.NETWORK_AREA_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER NETWORK_TYPE_AUTO_ID_TRIG
BEFORE INSERT ON NETWORK_TYPE
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.NETWORK_TYPE_ID IS NULL)
BEGIN
	SELECT NETWORK_TYPE_SEQ.nextval INTO :newRow.NETWORK_TYPE_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER NOM_NETWORK_AUTO_ID_TRIG
BEFORE INSERT ON NOM_NETWORK
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.NOM_NETWORK_ID IS NULL)
BEGIN
	SELECT NOM_NETWORK_SEQ.nextval INTO :newRow.NOM_NETWORK_ID FROM dual;
END;
/


CREATE OR REPLACE TRIGGER NOM_REACH_AUTO_ID_TRIG
BEFORE INSERT ON NOM_REACH
REFERENCING NEW AS newRow
FOR EACH ROW WHEN (newRow.NOM_REACH_ID IS NULL)
BEGIN
	SELECT NOM_REACH_SEQ.nextval INTO :newRow.NOM_REACH_ID FROM dual;
END;
/


COMMIT
/
	