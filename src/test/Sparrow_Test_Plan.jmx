<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.0">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Sparrow Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Predict Tests" enabled="true">
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1206226840000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1206226840000</longProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="localhost Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sparrow-predict_core-context-root/predict_test.jsp</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Predict Tests" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Predict #1 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;&lt;sparrow-prediction-request xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot;	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&lt;predict model-id=&quot;22&quot;&gt;	&lt;change-from-nominal type=&quot;perc_change&quot;&gt;&lt;source-adjustments&gt;&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt;&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt;&lt;specific src=&quot;2&quot; reach=&quot;1787602&quot; value=&quot;7.77&quot;/&gt;&lt;specific src=&quot;1&quot; reach=&quot;1787601&quot; value=&quot;9.99&quot;/&gt;&lt;/source-adjustments&gt;&lt;/change-from-nominal&gt;&lt;/predict&gt;&lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1940832053">ATMDEP</stringProp>
                <stringProp name="1831756172">not decayed</stringProp>
                <stringProp name="-902861072">Grand Total</stringProp>
                <stringProp name="-2128947470">1787601</stringProp>
                <stringProp name="-2103949689">1849982</stringProp>
                <stringProp name="311729995">	9.99	</stringProp>
                <stringProp name="309880969">	7.77	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Predict #2 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-prediction-request   xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	 	&lt;predict model-id=&quot;22&quot;&gt; 		&lt;change-from-nominal type=&quot;perc_change&quot;&gt; 			&lt;source-adjustments&gt; 				&lt;!-- Sort order: 2 --&gt;&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt; 				&lt;!-- Sort order: 1 --&gt;&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt; 				&lt;!-- Sort order: 4 --&gt;&lt;specific src=&quot;2&quot; reach=&quot;1787602&quot; value=&quot;7&quot;/&gt;&lt;!-- VALUE WAS 315.819 --&gt; 				&lt;!-- Sort order: 3 --&gt;&lt;specific src=&quot;1&quot; reach=&quot;1787601&quot; value=&quot;9.99&quot;/&gt;&lt;!-- VALUE WAS 5432.3354442 --&gt; 			&lt;/source-adjustments&gt; 		&lt;/change-from-nominal&gt; 	&lt;/predict&gt; &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1940832053">ATMDEP</stringProp>
                <stringProp name="1831756172">not decayed</stringProp>
                <stringProp name="-902861072">Grand Total</stringProp>
                <stringProp name="-2128947470">1787601</stringProp>
                <stringProp name="-2103949689">1849982</stringProp>
                <stringProp name="311729995">	9.99	</stringProp>
                <stringProp name="9995897">	7.0	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Predict #3 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-prediction-request   xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	 	&lt;predict model-id=&quot;22&quot;&gt; 		&lt;change-from-nominal type=&quot;perc_change&quot;&gt; 			&lt;source-adjustments&gt; 				&lt;!-- Sort order: 2 --&gt;&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt; 				&lt;!-- Sort order: 1 --&gt;&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt; 				&lt;!-- Sort order: 4 --&gt;&lt;specific src=&quot;2&quot; reach=&quot;1787602&quot; value=&quot;7&quot;/&gt;&lt;!-- VALUE WAS 315.819 --&gt; 				&lt;!-- Sort order: 3 --&gt;&lt;specific src=&quot;1&quot; reach=&quot;1787601&quot; value=&quot;9.99&quot;/&gt;&lt;!-- VALUE WAS 5432.3354442 --&gt; 			&lt;/source-adjustments&gt; 		&lt;/change-from-nominal&gt; 	&lt;/predict&gt; &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1940832053">ATMDEP</stringProp>
                <stringProp name="1831756172">not decayed</stringProp>
                <stringProp name="-902861072">Grand Total</stringProp>
                <stringProp name="-2128947470">1787601</stringProp>
                <stringProp name="-2103949689">1849982</stringProp>
                <stringProp name="1115851015">	9\.99	</stringProp>
                <stringProp name="311242489">	7\.0	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IDByPoint Tests" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="IDByPoint #1 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lat</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">long</stringProp>
                  <stringProp name="Argument.value">-100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">result-count</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_idpoint/22</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2026584812">	310\.0	</stringProp>
                <stringProp name="-628782642">	8376\.0	</stringProp>
                <stringProp name="803564859">	12846\.0	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="IDByPoint #2 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lat</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">long</stringProp>
                  <stringProp name="Argument.value">-100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">result-count</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_idpoint/22</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2026584812">	310\.0	</stringProp>
                <stringProp name="-1821442812">	8376.0	</stringProp>
                <stringProp name="528208466">	12846.0</stringProp>
                <stringProp name="-1124273867">	33377\.0	</stringProp>
                <stringProp name="401982155">	55081\.0	</stringProp>
                <stringProp name="-340997167">	56297\.0	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="IDByPoint #3 Request" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lat</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">long</stringProp>
                  <stringProp name="Argument.value">-4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">result-count</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_idpoint/22</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1454209635">500 Internal Server Error</stringProp>
                <stringProp name="72706427">java.lang.Exception</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">true</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Model Tests" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Model #1 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-meta-request   xmlns=&quot;http://www.usgs.gov/sparrow/meta_request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	&lt;model public=&quot;true&quot; archived=&quot;false&quot; approved=&quot;true&quot;&gt; 		&lt;source/&gt; 	&lt;/model&gt; &lt;/sparrow-meta-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_model/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="37796921">Chesapeake bay	Chesapeake bay Test Model	2007-03-22</stringProp>
                <stringProp name="-789902014">Chesapeake bay v2	Chesapeake bay Test Model	2007-05-25</stringProp>
                <stringProp name="-958722476">national Model	A national model based on the E2RF1 dataset.	2007-05-30	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Model #2 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-meta-request   xmlns=&quot;http://www.usgs.gov/sparrow/meta_request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	&lt;model public=&quot;false&quot; archived=&quot;true&quot; approved=&quot;false&quot;&gt; 	&lt;/model&gt; &lt;/sparrow-meta-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_model/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="37796921">Chesapeake bay	Chesapeake bay Test Model	2007-03-22</stringProp>
                <stringProp name="-789902014">Chesapeake bay v2	Chesapeake bay Test Model	2007-05-25</stringProp>
                <stringProp name="-958722476">national Model	A national model based on the E2RF1 dataset.	2007-05-30	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="Model #1 XML BODY request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">sparrow/sp_model</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:sp=&quot;http://usgs.gov/SparrowService&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
		&lt;sparrow-meta-request
		  xmlns=&quot;http://www.usgs.gov/sparrow/meta_request/v0_1&quot;
			xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
			&lt;model public=&quot;true&quot; archived=&quot;false&quot; approved=&quot;true&quot;&gt;
				&lt;source/&gt;
			&lt;/model&gt;
		&lt;/sparrow-meta-request&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-186689111">Chesapeake bay Test Model</stringProp>
                <stringProp name="-212349942">Chesapeake bay v2</stringProp>
                <stringProp name="879885475">A national model based on the E2RF1 dataset.</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Filter Tests" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Filter #1 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-prediction-request   xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	 	&lt;predict model-id=&quot;22&quot;&gt; 		&lt;change-from-nominal type=&quot;perc_change&quot;&gt; 			&lt;source-adjustments&gt; 				&lt;!-- Sort order: 2 --&gt;&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt; 				&lt;!-- Sort order: 1 --&gt;&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt; 				&lt;!-- Sort order: 4 --&gt;&lt;specific src=&quot;2&quot; reach=&quot;1787602&quot; value=&quot;7.77&quot;/&gt;&lt;!-- VALUE WAS 315.819 --&gt; 				&lt;!-- Sort order: 3 --&gt;&lt;specific src=&quot;1&quot; reach=&quot;1787601&quot; value=&quot;9.99&quot;/&gt;&lt;!-- VALUE WAS 5432.3354442 --&gt; 			&lt;/source-adjustments&gt; 		&lt;/change-from-nominal&gt; 	&lt;/predict&gt; 	 	&lt;response-options&gt; 		&lt;result-filter&gt; 			&lt;near-point result-count=&quot;5&quot;&gt; 				&lt;point lat=&quot;43&quot; long=&quot;-89.3&quot;/&gt;&lt;!-- In Madison --&gt; 			&lt;/near-point&gt; 		&lt;/result-filter&gt; 		&lt;result-content&gt; 			&lt;data-series&gt;incremental&lt;/data-series&gt; 		&lt;/result-content&gt; 	&lt;/response-options&gt; 	 &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1798057587">id	Total Inc\. \(not decayed\)</stringProp>
                <stringProp name="255393644">1808834	26\.352117375737343</stringProp>
                <stringProp name="-1466430846">1808831	26\.997750960004957	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Filter #2 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-prediction-request   xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	 	&lt;predict model-id=&quot;1&quot;&gt; 		&lt;change-from-nominal type=&quot;perc_change&quot;&gt; 			&lt;source-adjustments&gt; 				&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt; 				&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt; 			&lt;/source-adjustments&gt; 		&lt;/change-from-nominal&gt; 	&lt;/predict&gt; 	 	&lt;response-options&gt; 		&lt;result-filter&gt; 			&lt;near-point result-count=&quot;5&quot;&gt; 				&lt;point lat=&quot;38.43&quot; long=&quot;-76.93&quot;/&gt; 			&lt;/near-point&gt; 		&lt;/result-filter&gt; 		&lt;result-content&gt; 			&lt;data-series&gt;all&lt;/data-series&gt; 		&lt;/result-content&gt; 	&lt;/response-options&gt; 	 &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-329611037">id	pttn	area	frtn	atmd	mann	urbn	septic	crop</stringProp>
                <stringProp name="54768864">605	0\.0	3736\.71	6398\.58	25219\.06</stringProp>
                <stringProp name="-65519524">1543	0\.0	6460\.11	17728\.96</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Filter #3 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt; &lt;sparrow-prediction-request   xmlns=&quot;http://www.usgs.gov/sparrow/prediction-request/v0_1&quot; 	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt; 	 	&lt;predict model-id=&quot;1&quot;&gt; 		&lt;change-from-nominal type=&quot;perc_change&quot;&gt; 			&lt;source-adjustments&gt; 				&lt;gross-src src=&quot;4&quot; coef=&quot;2&quot;/&gt; 				&lt;gross-src src=&quot;1&quot; coef=&quot;.5&quot;/&gt; 			&lt;/source-adjustments&gt; 		&lt;/change-from-nominal&gt; 	&lt;/predict&gt; 	 	&lt;response-options&gt; 		&lt;result-filter&gt; 			&lt;near-point result-count=&quot;5&quot;&gt; 				&lt;point lat=&quot;38.43&quot; long=&quot;-76.93&quot;/&gt; 			&lt;/near-point&gt; 		&lt;/result-filter&gt; 		&lt;result-content&gt; 			&lt;data-series&gt;incremental&lt;/data-series&gt; 		&lt;/result-content&gt; 	&lt;/response-options&gt; 	 &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1798057587">id	Total Inc\. \(not decayed\)</stringProp>
                <stringProp name="190021493">92	-11.908912667596306	</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Misc Tests" enabled="true"/>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Misc #1 Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xmlreq</stringProp>
                  <stringProp name="Argument.value">&lt;sparrow-prediction-request&gt; 	&lt;!-- This file is way out of date - its more of an example of where I&apos;d like to take this --&gt; 	&lt;processing-instructions&gt;  	&lt;/processing-instructions&gt; 	 	&lt;!-- Generic Container for any type of prediction --&gt; 	&lt;predict model-id=&quot;1&quot;&gt; 		&lt;!-- 		The type of prediction.  One of raw-value or change-from-nominal. 		Future versions may include options to compare two versions of a model, or 		a model at two different times (not sure how I&apos;d store these in the db). 		So, the model-id is specified inside this element rather then at top level, 		since we may need multiple model ids depending on the calculation type. 		--&gt; 		&lt;raw-value&gt; 			 			&lt;!-- 			A list of source adjustments. 			Order is signmificant, but there will be a priority to these.  For instance, 			all individual adjustments will take priority over gross adjustments. 			--&gt; 			&lt;source-adjustments&gt; 				&lt;!-- 				Uniformly adjust these sources by the specified multiplier. 				Unadjusted sources are basically passed an implicite &apos;1&apos; value 				--&gt; 				&lt;gross-adjust src=&quot;1&quot; coef=&quot;.25&quot;/&gt; 				&lt;gross-adjust src=&quot;3&quot; coef=&quot;2&quot;/&gt; 				 				&lt;!-- Not implemented, but would this override the gross adj values or augment it? --&gt; 				&lt;criteria-adjust override-gross=&quot;true&quot;&gt; 					&lt;gross-adjust coef=&quot;.25&quot;/&gt; 					 					&lt;criteria&gt; 						&lt;group&gt; 							&lt;criteria table=&quot;metadata&quot; field=&quot;state_code&quot; type=&quot;equals&quot;&gt;mn&lt;/criteria&gt; 							&lt;criteria table=&quot;metadata&quot; field=&quot;elevation&quot; type=&quot;gt&quot;&gt;1000&lt;/criteria&gt; 						&lt;/group&gt; 						&lt;or/&gt; 						&lt;group&gt; 							&lt;criteria table=&quot;metadata&quot; field=&quot;state_code&quot; type=&quot;equals&quot;&gt;mn&lt;/criteria&gt; 							&lt;criteria table=&quot;source&quot; field=&quot;type&quot; type=&quot;equals&quot;&gt;point_source&lt;/criteria&gt; 						&lt;/group&gt; 					&lt;/criteria&gt; 				&lt;/criteria-adjust&gt; 				 				&lt;!-- 				Specify the source value for a specific source at a specific reach. 				This is the highest priority and will override any other changes 				--&gt; 				&lt;specific-adjust src=&quot;1&quot; reach=&quot;1242&quot; value=&quot;7839&quot;/&gt; 			&lt;/source-adjustments&gt; 		&lt;/raw-value&gt; 	&lt;/predict&gt; &lt;/sparrow-prediction-request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mimetype</stringProp>
                  <stringProp name="Argument.value">tab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">unzip</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sparrow/sp_predict/formpost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="301119952">Unsupported adjustment type: &apos;gross-adjust&apos;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.assume_success">true</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
