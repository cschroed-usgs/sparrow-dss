#
# These queries are some basic data validation checks that should return
# Zero rows for each model if the data is good.
#
CheckNullEnhReach = select MODEL_REACH_ID from model_reach where sparrow_model_id = $MODEL_ID$ and enh_reach_id is null and ROWNUM < 10

CheckNullCalculationAttribs = select reach.IDENTIFIER from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and (attrib.meanq is null OR attrib.CATCH_AREA = null) and ROWNUM < 10
	
CheckNullHucAttribs = select reach.IDENTIFIER from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and \
	(attrib.HUC2 is null OR attrib.HUC4 = null OR attrib.HUC6 = null OR attrib.HUC8 = null) and ROWNUM < 10
	
CheckForMissingAttributeRows = select model_reach_id, IDENTIFIER FROM MODEL_REACH \
	WHERE sparrow_model_id = $MODEL_ID$ and model_reach_id NOT IN ( \
	select model_reach_id from model_reach_attrib ) and ROWNUM < 10
	
CheckForNullTerminations = select reach.IDENTIFIER \
	from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and \
	(attrib.SHORE_REACH IS NULL OR attrib.TERM_TRANS IS NULL OR attrib.TERM_ESTUARY IS NULL OR attrib.TERM_NONCONNECT IS NULL) and \
	ROWNUM < 10
	
CheckForNullGeometry = Select IDENTIFIER \
FROM model_geom_vw \
WHERE (reach_geom is null OR catch_geom is null) and sparrow_model_id = $MODEL_ID$

# Of the model reaches for which we use ENH geometry (and not model geom), are
# there any duplicated references to the ENH geom?  This would result in those
# reaches being indistinguishable on the map and during the ID operation.
CheckForDuplicateEnhIdsWithNoModelReachGeom= Select COUNT(ENH_REACH_ID) \
FROM model_reach \
WHERE sparrow_model_id = $MODEL_ID$ AND MODEL_REACH_ID NOT IN ( \
	SELECT g.MODEL_REACH_ID FROM MODEL_REACH_GEOM g INNER JOIN MODEL_REACH r ON g.MODEL_REACH_ID = r.MODEL_REACH_ID WHERE sparrow_model_id = $MODEL_ID$ \
) \
GROUP BY ENH_REACH_ID \
HAVING COUNT(ENH_REACH_ID) > 1 \


# Ensure the model geom view exists.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
EnsureTheModelViewExists_1 = \
SELECT count(*) from user_objects where object_type = 'VIEW' AND OBJECT_NAME = 'MODEL_GEOM_@MODEL_ID@_VW'

# Ensure the GEOM columns are registered for reaches and catchments.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
EnsureTheReachGeomColumnIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'MODEL_GEOM_@MODEL_ID@_VW' AND COLUMN_NAME = 'REACH_GEOM'
EnsureTheCatchGeomColumnIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'MODEL_GEOM_@MODEL_ID@_VW' AND COLUMN_NAME = 'CATCH_GEOM'

# Ensure that the model specific view returns the same number of rows as the
# model_reach table for that model.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
select \
	case \
		when (SELECT COUNT(*) mvc FROM MODEL_GEOM_@MODEL_ID@_VW)=(SELECT COUNT(*) mvc FROM MODEL_REACH where sparrow_model_id = $MODEL_ID$) then 1 \
		else 0 \
	end compare, \
	(SELECT COUNT(*) mvc FROM MODEL_GEOM_@MODEL_ID@_VW) mdvw, \
	(SELECT COUNT(*) mvc FROM MODEL_REACH where sparrow_model_id = $MODEL_ID$) allview \
from dual