<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>gov.usgs.cida</groupId>
	<artifactId>sparrow-dss-service</artifactId>
	<packaging>war</packaging>
	<name>Sparrow DSS Service</name>
	<version>0.9-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<netbeans.hint.deploy.server>Tomcat60</netbeans.hint.deploy.server>
		<cargo.containerId>tomcat6x</cargo.containerId>
	</properties>

	<scm>
		<developerConnection>scm:svn:https://cida-svn.er.usgs.gov/repos/dev/usgs/sparrow/dss/sparrow_service/trunk</developerConnection>
	</scm>

	<distributionManagement>
		<repository>
			<id>cida-sparrow-dss-releases</id>
			<name>CIDA Sparrow DSS Releases</name>
			<url>http://internal.cida.usgs.gov/nexus/content/repositories/cida-sparrow-dss-releases</url>
		</repository>
		<snapshotRepository>
			<id>cida-sparrow-dss-snapshots</id>
			<name>CIDA Sparrow DSS Snapshots</name>
			<url>http://internal.cida.usgs.gov/nexus/content/repositories/cida-sparrow-dss-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<finalName>sparrow_mv</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<!-- Uncomment to exclude the long run tests, which hit the db. -->
				<!--
				<configuration>
					<excludes>
						<exclude>**/*LongRunTest.java</exclude>
					</excludes>
				</configuration>
				-->
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<tagBase>https://cida-svn.er.usgs.gov/repos/dev/usgs/sparrow/dss/sparrow_service/tags</tagBase>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<container>
						<containerId>${cargo.containerId}</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.server.settings>${cargo.server.settings}</cargo.server.settings>
						</properties>
					</configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>cida-sparrow-dss-thirdparty</id>
			<url>http://internal.cida.usgs.gov/nexus/content/repositories/cida-sparrow-dss-thirdparty</url>
		</repository>
		<repository>
			<id>cida-thirdparty</id>
			<url>http://internal.cida.usgs.gov/nexus/content/repositories/cida-thirdparty</url>
		</repository>
		<!-- <repository> <id>repo1.maven.org/maven2</id> <url>http://repo2.maven.org/maven2</url> 
			</repository> <repository> <id>cida-maven-central</id> <url>http://internal.cida.usgs.gov/nexus/content/repositories/central/</url> 
			</repository> -->
		<!-- <repository> <id>cida-qw-releases</id> <url>http://http://internal.cida.usgs.gov/nexus/content/repositories/central</url> 
			</repository> -->
	</repositories>

	<dependencies>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<!-- previous version was 2.4, 2.5 is untested -->
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<!-- was 1.2.13 -->
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>woodstox</groupId>
			<artifactId>wstx-lgpl</artifactId>
			<!-- was 3.2.? -->
			<version>3.2.7</version>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<!-- was 2.0.beta -->
			<version>2.3.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<!-- Required for xstream to deserialize JSON -->
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- These are std jars provided by J2EE containers -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6_g</artifactId>
			<version>11.2.0.2.0-1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<!-- Used for jndi naming services -->
			<groupId>org.apache.tomcat</groupId>
			<artifactId>catalina</artifactId>
			<version>6.0.29</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>httpunit</groupId>
			<artifactId>httpunit</artifactId>
			<version>1.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- this is an optional dep of httpunit, but we need it for the tests -->
			<groupId>rhino</groupId>
			<artifactId>js</artifactId>
			<version>1.6R5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<!-- was 4.5 -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Required by XMLUnit to support out-of-order element comparison -->
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.6.2</version>
			<scope>test</scope>
		</dependency>

		<!-- This unique dep. is an XML parser that MapViewer requires, but is 
			not distributed w/ MapViewer (they assume you will be running on OC4J. -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>xmlparserv2</artifactId>
			<version>10.1.3.1.0_prod-1</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>


		<!-- These two deps are provided when mapviewer is overlayed, so they are 
			just required when compiling and testing. -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>sdoapi</artifactId>
			<version>10G-1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>sdovis</artifactId>
			<version>10G-1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<!-- this special dep. is only used for overlaying the wars. It is not 
			placed on the classpath -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>mapviewer</artifactId>
			<version>10G-1</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
		</dependency>

	</dependencies>
	<profiles>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name><value>test</value>
				</property>
			</activation>
			<properties>
				<service-url>http://localhost:8080/sparrow_mv</service-url>
				<cargo.server.settings>cargo-sparrow-test</cargo.server.settings>
			</properties>
		</profile>
		<profile>
			<id>qa-svs-1</id>
			<activation>
				<property><name>env</name><value>qa-svs-1</value></property>
			</activation>
			<properties>
				<cargo.server.settings>cargo-sparrow-qa-svs-1</cargo.server.settings>
			</properties>
		</profile>
		<profile>
			<id>qa-svs-2</id>
			<activation>
				<property><name>env</name><value>qa-svs-2</value></property>
			</activation>
			<properties>
				<cargo.server.settings>cargo-sparrow-qa-svs-2</cargo.server.settings>
			</properties>
		</profile>
		<profile>
			<id>prod-svs-0</id>
			<activation>
				<property><name>env</name><value>prod-svs-0</value></property>
			</activation>
			<properties>
				<cargo.server.settings>cargo-sparrow-prod-svs-0</cargo.server.settings>
			</properties>
		</profile>
		<profile>
			<id>prod-svs-1</id>
			<activation>
				<property><name>env</name><value>prod-svs-1</value></property>
			</activation>
			<properties>
				<cargo.server.settings>cargo-sparrow-prod-svs-1</cargo.server.settings>
			</properties>
		</profile>
		<profile>
			<id>prod-svs-2</id>
			<activation>
				<property><name>env</name><value>prod-svs-2</value></property>
			</activation>
			<properties>
				<cargo.server.settings>cargo-sparrow-prod-svs-2</cargo.server.settings>
			</properties>
		</profile>
	</profiles>
</project>
