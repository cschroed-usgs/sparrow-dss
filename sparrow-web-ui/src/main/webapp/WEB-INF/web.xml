<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <description>SPARROW Mapping Application</description>
    <display-name>Sparrow Client {Owner: NB, Coder: EE}</display-name>

    <context-param>
        <description>Set the default read timeout to 2 minutes (1 min by default)</description>
        <param-name>readTimeout</param-name>
        <param-value>120000</param-value>
    </context-param>
    <context-param>
        <description>Set the default connection timeout to 2 minutes (15 seconds by default)</description>
        <param-name>connectTimeout</param-name>
        <param-value>120000</param-value>
    </context-param>

    <!--
    <filter>
		<description>
			Prompts for login if the request is not on the public water server.
		</description>
		<filter-name>promptForAuthentication</filter-name>
		<filter-class>gov.usgswim.sparrow.AuthenticationFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>promptForAuthentication</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
    <filter>
        <description>
			Minimal traffic logging so we know when usage is low for redeploys
		</description>
        <filter-name>activityLogFilter</filter-name>
        <filter-class>gov.usgswim.sparrow.ActivityLogFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>activityLogFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Require a login to access everything (holes punched in this wall farther below -->
    <security-constraint>
        <display-name>Entire app security</display-name>
        <web-resource-collection>
            <web-resource-name>Everything</web-resource-name>
            <url-pattern>${security-constraint-url-pattern}</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>sparrow_user</role-name>
            <role-name>sparrow_admin</role-name>
            <role-name>sparrow_modeler</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>A single page that forces the user to login</display-name>
        <web-resource-collection>
            <web-resource-name>Everything</web-resource-name>
            <url-pattern>/secure_home.jsp</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>sparrow_user</role-name>
            <role-name>sparrow_admin</role-name>
            <role-name>sparrow_modeler</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>Authorization hole to access css assets on the login page</display-name>
        <web-resource-collection>
            <web-resource-name>Public Assets</web-resource-name>
            <url-pattern>/css/*</url-pattern>
            <url-pattern>/images/*</url-pattern>
            <url-pattern>/favicon.ico</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>Authorization hole to access a diagnostic request test page.</display-name>
        <web-resource-collection>
            <web-resource-name>Test Pages</web-resource-name>
            <url-pattern>/request_test.jsp</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <login-config>
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>
            <form-error-page>/loginerror.jsp</form-error-page>
        </form-login-config>
    </login-config>
    <security-role>
        <description>A standard user, able to see published public models.</description>
        <role-name>sparrow_user</role-name>
    </security-role>
    <security-role>
        <description>An administrative user, able to see published all models.
		Future super powers may include being able to publish and unpublish models.
		</description>
        <role-name>sparrow_admin</role-name>
    </security-role>
    <servlet>
        <servlet-name>ModelServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_model/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>IdentifyServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_idpoint/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>IdentifyCalibrationServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_idcalibsite/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>FindReachServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_findReach/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>ContextIDServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_predictcontext/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>PredictServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_predict/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>MapRequestServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.MapRequestServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>omserver</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>CalibSiteOverlayServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.CalibSiteOverlayServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>omserver</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>Huc8OverlayServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.Huc8OverlayServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>omserver</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>ReachOverlayServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.ReachOverlayServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>omserver</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>BinningServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_binning/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>ConfirmBinningServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_confirmBinning/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>GetReachGroupsServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_getConflictingReachGroups/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>HelpServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_help/lookup/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>SaveMapStateServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.SaveMapStateServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>LoadMapStateServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.map.LoadMapStateServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>PredefSessionListServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_session</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>HUCServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>huc</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>ReachWatershedServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>reachwatershed</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>FindReachSupportServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_findReachSupport/lookup/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>CoreInfoServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>app-info.txt</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>IndividualReachPredictionServlet</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_indivReachPredict/formpost</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>DeliveryTerminalReport_Service</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_delivery_terminalreport</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DeliveryTerminalReport_Service</servlet-name>
        <url-pattern>/getDeliveryTerminalReport</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>DeliveryAggReport_Service</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_delivery_aggreport</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DeliveryAggReport_Service</servlet-name>
        <url-pattern>/getDeliveryAggReport</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>Watershed_Service</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>sp_watershed</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Watershed_Service</servlet-name>
        <url-pattern>/sp_watershed</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>HealthTest</servlet-name>
        <servlet-class>gov.usgswim.sparrow.HealthTest</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ModelServlet</servlet-name>
        <url-pattern>/getSources</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ModelServlet</servlet-name>
        <url-pattern>/getModels</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>IdentifyServlet</servlet-name>
        <url-pattern>/getIdentify</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>IdentifyCalibrationServlet</servlet-name>
        <url-pattern>/getCalibrationSite</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ContextIDServlet</servlet-name>
        <url-pattern>/getContextId</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>PredictServlet</servlet-name>
        <url-pattern>/getPredict</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MapRequestServlet</servlet-name>
        <url-pattern>/getMap</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CalibSiteOverlayServlet</servlet-name>
        <url-pattern>/calibSiteOverlay</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Huc8OverlayServlet</servlet-name>
        <url-pattern>/huc8Overlay</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ReachOverlayServlet</servlet-name>
        <url-pattern>/reachOverlay</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MapRequestServlet</servlet-name>
        <url-pattern>/getLegend</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>BinningServlet</servlet-name>
        <url-pattern>/getBins</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ConfirmBinningServlet</servlet-name>
        <url-pattern>/confirmBins</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetReachGroupsServlet</servlet-name>
        <url-pattern>/getConflictingReachGroups</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>HelpServlet</servlet-name>
        <url-pattern>/helpService</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>SaveMapStateServlet</servlet-name>
        <url-pattern>/saveMapState</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LoadMapStateServlet</servlet-name>
        <url-pattern>/loadMapState</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>FindReachServlet</servlet-name>
        <url-pattern>/findReaches</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>PredefSessionListServlet</servlet-name>
        <url-pattern>/listPredefSessions</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>HUCServlet</servlet-name>
        <url-pattern>/huc</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ReachWatershedServlet</servlet-name>
        <url-pattern>/reachwatershed</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>FindReachSupportServlet</servlet-name>
        <url-pattern>/findReachSupport</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CoreInfoServlet</servlet-name>
        <url-pattern>/getCoreInfo</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>IndividualReachPredictionServlet</servlet-name>
        <url-pattern>/sp_indivReachPredict/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>HealthTest</servlet-name>
        <url-pattern>/HealthTest</url-pattern>
    </servlet-mapping>
	
    <servlet>
        <servlet-name>RegisterMapLayerService</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>RegisterMapLayerService</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>RegisterMapLayerService</servlet-name>
        <url-pattern>/RegisterMapLayerService/*</url-pattern>
    </servlet-mapping>
	
    <servlet>
        <servlet-name>GeoServerWMSEndPointService</servlet-name>
        <servlet-class>gov.usgswim.sparrow.SparrowProxyServlet</servlet-class>
        <init-param>
            <param-name>forward-context</param-name>
            <param-value>GeoServerWMSEndPointService</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>GeoServerWMSEndPointService</servlet-name>
        <url-pattern>/GeoServerWMSEndPointService/*</url-pattern>
    </servlet-mapping>
	
    <session-config>
        <session-timeout>360</session-timeout>
    </session-config>
    <mime-mapping>
        <extension>html</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>txt</extension>
        <mime-type>text/plain</mime-type>
    </mime-mapping>
</web-app>
