SelectSourceData = \
	SELECT IDENTIFIER,SOURCE_ID,NAME,DISPLAY_NAME,DESCRIPTION,CONSTITUENT,UNITS,PRECISION,IS_POINT_SOURCE \
	FROM SOURCE \
	WHERE SPARROW_MODEL_ID = $ModelId$ \
	ORDER BY SORT_ORDER
	
# This query normalizes the hydseq to start w/ 1 w/ no gaps.
# Wrapped select prevents sorting by rownum aliased to hydseq, which would
# result in an unpredictable sort (i.e., sort by rownum, which has no effect).
SelectTopoData = \
 select 	IDENTIFIER, MODEL_REACH, FNODE, TNODE, IFTRAN, ROWNUM as HYDSEQ FROM ( \
	SELECT \
		IDENTIFIER, MODEL_REACH_ID as MODEL_REACH, FNODE, TNODE, IFTRAN \
	FROM MODEL_REACH \
	WHERE SPARROW_MODEL_ID = $ModelId$ \
	ORDER BY HYDSEQ, IDENTIFIER \
)

## ee: The identifier column is unneeded is we assume that all the related columns
## are in the correct order, but a bug in column ordering about killed us, so
## I'm adding it as a check.
SelectReachCoef = \
	SELECT coef.VALUE AS Value, rch.Identifier as Identifier \
	FROM \
		SOURCE_REACH_COEF coef INNER JOIN MODEL_REACH rch ON coef.MODEL_REACH_ID = rch.MODEL_REACH_ID \
	WHERE \
		rch.SPARROW_MODEL_ID = $ModelId$ AND \
		coef.Iteration = $Iteration$ AND \
		coef.SOURCE_ID = $SourceId$ \
	ORDER BY rch.HYDSEQ, rch.IDENTIFIER
	
SelectDeliveryCoef = \
	SELECT coef.INC_DELIVERY, coef.TOTAL_DELIVERY \
	FROM REACH_COEF coef INNER JOIN MODEL_REACH rch ON coef.MODEL_REACH_ID = rch.MODEL_REACH_ID \
	WHERE rch.SPARROW_MODEL_ID = $ModelId$ AND coef.ITERATION = $Iteration$ \
	ORDER BY rch.HYDSEQ, rch.IDENTIFIER
	
## ee: The identifier column is unneeded is we assume that all the related columns
## are in the correct order, but a bug in column ordering about killed us, so
## I'm adding it as a check.
SelectSourceValues = \
	SELECT src.VALUE AS Value, rch.IDENTIFIER AS Identifier \
	FROM SOURCE_VALUE src INNER JOIN MODEL_REACH rch ON src.MODEL_REACH_ID = rch.MODEL_REACH_ID \
	WHERE \
		rch.SPARROW_MODEL_ID = $ModelId$ AND \
		src.SOURCE_ID = $SourceId$ \
	ORDER BY rch.HYDSEQ, rch.IDENTIFIER