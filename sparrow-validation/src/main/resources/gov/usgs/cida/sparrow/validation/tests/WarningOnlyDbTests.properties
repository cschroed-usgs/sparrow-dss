#
# Queries that end with an underscore and then a number (eg queryName_2) are
# expected to return a single row with a single column with that number at that
# row/column.
# Queries that do not end that way are expected to return zero rows.
# Anything else is treated as a model error.
#

# Ensure the model geom view exists.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
EnsureTheModelViewExists_1 = \
SELECT count(*) from user_objects where object_type = 'VIEW' AND OBJECT_NAME = 'MODEL_GEOM_@MODEL_ID@_VW'

# Validate the geometry.  This query returns rows for each invalid geomety
# found in the model, so if there are errors, rerun validation query to find the
# errors.  The most common error I would expect is the 13356 error, which indicates
# adjacent duplicate points.
# If errors are found, I think the following query can be run to fix
# the geometry, although you will need to check what table actually contains
# that geom:
#
# UPDATE SOME_TABLE t1 set t1.reach_geom = (
# 	select SDO_UTIL.REMOVE_DUPLICATE_VERTICES(reach_geom, 1) geom
#	from SOME_TABLE t2
#	where t1.reach_id = t2.reach_id
# )
# The above query would clean all geom in a table - probably a good thing, though
# it will use a lot of CPU and will likely require the spatial indexes to be rebuilt.
CheckForInvalidGeometry = \
select * from ( \
	select identifier, sdo_geom.validate_geometry_with_context(reach_geom, 1) err from model_geom_@MODEL_ID@_vw \
) t \
where t.err != 'TRUE'



# Ensure the GEOM columns are registered for reaches and catchments.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
EnsureTheReachGeomColumnIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'MODEL_GEOM_@MODEL_ID@_VW' AND COLUMN_NAME = 'REACH_GEOM'
EnsureTheCatchGeomColumnIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'MODEL_GEOM_@MODEL_ID@_VW' AND COLUMN_NAME = 'CATCH_GEOM'
EnsureTheReachGeomThemeIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_THEMES WHERE BASE_TABLE = 'MODEL_GEOM_@MODEL_ID@_VW' AND GEOMETRY_COLUMN = 'REACH_GEOM'
EnsureTheCathGeomThemeIsRegistered_1 = \
select count(*) from MDSYS.USER_SDO_THEMES WHERE BASE_TABLE = 'MODEL_GEOM_@MODEL_ID@_VW' AND GEOMETRY_COLUMN = 'CATCH_GEOM'

# Ensure that the model specific view returns the same number of rows as the
# model_reach table for that model.  Expect a value of 1 in the first column.
# (the _1 in the name enforces this type of '1' value check)
EnsureModelViewReturnsAllReachesInModel_1 = \
select \
	case \
		when (SELECT COUNT(*) mvc FROM MODEL_GEOM_@MODEL_ID@_VW)=(SELECT COUNT(*) mvc FROM MODEL_REACH where sparrow_model_id = $MODEL_ID$) then 1 \
		else 0 \
	end compare, \
	(SELECT COUNT(*) mvc FROM MODEL_GEOM_@MODEL_ID@_VW) mdvw, \
	(SELECT COUNT(*) mvc FROM MODEL_REACH where sparrow_model_id = $MODEL_ID$) allview \
from dual