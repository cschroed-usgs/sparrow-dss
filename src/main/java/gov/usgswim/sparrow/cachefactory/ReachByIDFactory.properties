FindReachold = \
SELECT \
	attrib.identifier AS identifier, attrib.reach_name AS reach_name, \
	SDO_GEOM.SDO_MIN_MBR_ORDINATE(geo.reach_geom, m.diminfo, 1) AS MIN_LONG, \
	SDO_GEOM.SDO_MIN_MBR_ORDINATE(geo.reach_geom, m.diminfo, 2) AS MIN_LAT, \
	SDO_GEOM.SDO_MAX_MBR_ORDINATE(geo.reach_geom, m.diminfo, 1) AS MAX_LONG, \
	SDO_GEOM.SDO_MAX_MBR_ORDINATE(geo.reach_geom, m.diminfo, 2) AS MAX_LAT \
FROM \
	MODEL_ATTRIB_VW attrib inner join MODEL_GEOM_VW geo on attrib.model_reach_id = geo.model_reach_id, user_sdo_geom_metadata m \
WHERE \
	attrib.sparrow_model_id = $ModelId$ and attrib.identifier = $Identifier$ \
	AND m.table_name = 'MODEL_REACH_GEOM' AND m.column_name = 'REACH_GEOM'

## The geometries are grid based. Based on clicking a point in the wisconsin area, the grid unit used
## is a .001364 long by .000969 rectangle. The perpendicular distance from one of vertices
## of a rectangle to its diagonal is a*b/sqrt(a^2 + b^2), where a and b are the sides of
## the rectangle. This gives 0.000789953.
## Similarly, the distance to the diagonal of a 2x1 rectangle is .001115 or .0009138, depending
## on whether the longer or shorter side of the rectangle is doubled. The corresponding midpoint
## vertex to diagonal distances are 1/2 that, or .0005577 or .0004566, respectively
## The mid-vertex-diagonal distance for a 3x2 or 2x3 are 2/3 of the corner-diag distance, or
## .001326 or .00116766, respectively
##
## So, I'm going to choose a value of the parameter to smooth out 2x1 but not 1x1 or 3x2.
## Choosing halfway between 1x1 and 2x1, or (.000789953 + .0005577)/2 = .0006738
## to simplify_geometry()
##--	, sdo_sam.simplify_geometry(geo.catch_geom, .0006738) as simp_geom, \
FindReach = \
SELECT \
	attrib.identifier AS identifier, attrib.reach_name AS reach_name, \
	geo.catch_geom, \
	case \
		when geo.catch_geom is null then geo.reach_geom \
		else null \
	end r_geom, \
	attrib.huc2, lkp2.name as huc2name, \
	attrib.huc4, lkp4.name as huc4name, \
	attrib.huc6, lkp6.name as huc6name, \
	attrib.huc8, lkp8.name as huc8name, \
	SDO_GEOM.SDO_MIN_MBR_ORDINATE(geo.reach_geom, m.diminfo, 1) AS MIN_LONG, \
	SDO_GEOM.SDO_MIN_MBR_ORDINATE(geo.reach_geom, m.diminfo, 2) AS MIN_LAT, \
	SDO_GEOM.SDO_MAX_MBR_ORDINATE(geo.reach_geom, m.diminfo, 1) AS MAX_LONG, \
	SDO_GEOM.SDO_MAX_MBR_ORDINATE(geo.reach_geom, m.diminfo, 2) AS MAX_LAT, \
	get_median_point(geo.reach_geom).sdo_point.x marker_long, \
    get_median_point(geo.reach_geom).sdo_point.y marker_lat \
FROM \
	((((MODEL_ATTRIB_VW attrib inner join MODEL_GEOM_VW geo \
		ON attrib.model_reach_id = geo.model_reach_id) \
	LEFT OUTER JOIN STREAM_NETWORK.huc2_LKP lkp2 \
		ON attrib.huc2 = lkp2.huc2) \
	LEFT OUTER JOIN STREAM_NETWORK.huc4_LKP lkp4 \
		ON attrib.huc4 = lkp4.huc4) \
	LEFT OUTER JOIN STREAM_NETWORK.huc6_LKP lkp6 \
		ON attrib.huc6 = lkp6.huc6) \
	LEFT OUTER JOIN STREAM_NETWORK.huc8_LKP lkp8 \
		ON attrib.huc8 = lkp8.huc8, \
	user_sdo_geom_metadata m \
WHERE \
	attrib.sparrow_model_id = $ModelId$ \
	AND attrib.identifier = $Identifier$ \
	AND m.table_name = 'MODEL_REACH_GEOM' \
	AND m.column_name = 'REACH_GEOM'


