package gov.usgswim.sparrow.cachefactory;

import java.math.BigDecimal;

import junit.framework.TestCase;

public class BinningFactoryTestBug1 extends TestCase {


	public static Double[] sortedDataBug1 =  new Double[] {
		-49.75630193384579d, -26.83868796941581d, -1.2991029469073048d,
		-0.6590395248155375d, -0.6483359828924541d, -0.5892893963620477d,
		-0.5717448903008834d, -0.471688873011866d, -0.37513077580944665d,
		-0.22147140921988476d, -0.22065015024331072d, -0.21767046086357608d,
		-0.2176606393001589d, -0.21707605575023714d, -0.21365780361835313d,
		-0.18318948224924203d, -0.1784500454371909d, -0.17526831540938953d,
		-0.16256183931527038d, -0.13094754854510826d, -0.13093821242855982d,
		-0.12387421784951372d, -0.12336370896203705d, -0.1211282872988097d,
		-0.12061466513516773d, -0.116822552545278d, -0.11597841437177997d,
		-0.113102095731457d, -0.11308827771041478d, -0.10238554708410344d,
		-0.08677395264260795d, -0.0867349042364851d, -0.08187844426085074d,
		-0.08091107083522586d, -0.009448419370875974d, -0.009426181986108778d,
		-0.009422943780735068d, -0.009405316646797708d, -0.008955025502069102d,
		-0.008613365972383292d, -0.008488846114126857d, -0.00841175676715578d,
		-0.00826725466534394d, -0.007763714425980659d, -0.0074897831863571535d,
		-0.007469875573771914d, -0.007423361039465284d, -0.007283795364794132d,
		-0.007256147523306335d, -0.007212690145466731d, -0.007109924770760779d,
		-0.007043599641036259d, -0.007037598181124678d, -0.007035077453575207d,
		-0.006726365731170129d, -0.0067125914001659745d, -0.006437126738305943d,
		-0.006195676161297106d, -0.006160697667464367d, -0.005539258491531324d,
		-0.005353533986481382d, -0.005334242287542908d, -0.005279698729291883d,
		-0.0052392462004492045d, -0.005182926113818405d, -0.005148523531596084d,
		-0.0049293572061835204d, -0.004913617854200631d, -0.0049012139116317915d,
		-0.004877289816019624d, -0.004829549466762463d, -0.004812963970658553d,
		-0.004801681267714169d, -0.004738942920046952d, -0.0047182619966033585d,
		-0.0046057105478121176d, -0.004562704619407805d, -0.004424641667354548d,
		-0.004396716231283233d, -0.0043867053782106775d, -0.0043754636859973965d,
		-0.0043249840524099544d, -0.004324962486764d, -0.004324463738305475d,
		-0.004324028746888623d, -0.004323996544340972d, -0.004320420808897369d,
		-0.004315379933775628d, -0.004293818457121489d, -0.004291656581213238d,
		-0.0042812940159696646d, -0.004277788224944819d, -0.004270119768130569d,
		-0.004245972036602586d, -0.004239846153457678d, -0.004232053690266954d,
		-0.004230120796832453d, -0.004222572202014035d, -0.004220064017468008d,
		-0.00419074364463907d, -0.004181849080938382d, -0.0041559428285388895d,
		-0.00414923419372545d, -0.004147452148546877d, -0.004087863022382116d,
		0.0
	};	//106 values




	public void testGetEqualCountBinsOfOne() {
		BigDecimal[] result = BinningFactory.buildEqualCountBins(sortedDataBug1, 5, Boolean.TRUE);

		for (BigDecimal val : result) {
			BigDecimal cleaned = val.stripTrailingZeros();

			if (cleaned.precision() > 5) {
				printBinningResult("These bins contain too many digits - recorded as a JUnit failure.", result);
				fail("The value " + val + " has way too many digits of precision.  Please fix.");
			}
		}
	}

	@SuppressWarnings("unused")
	private void printBinningResult(String message, BigDecimal[] result) {
		System.out.println(message);
		for (int i=0; i<result.length; i++) {
			System.out.println(i + ": " + result[i]);
		}
	}

}
