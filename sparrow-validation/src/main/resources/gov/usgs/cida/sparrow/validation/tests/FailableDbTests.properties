#
# Queries that end with an underscore and then a number (eg queryName_2) are
# expected to return a single row with a single column with that number at that
# row/column.
# Queries that do not end that way are expected to return zero rows.
# Anything else is treated as a model error.
#

CheckNullEnhReach = select MODEL_REACH_ID from model_reach where sparrow_model_id = $MODEL_ID$ and enh_reach_id is null and ROWNUM < 10

CheckNullCalculationAttribs = select reach.IDENTIFIER from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and (attrib.meanq is null OR attrib.CATCH_AREA is null) and ROWNUM < 10

CheckNullHucAttribs = select reach.IDENTIFIER from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and \
	(attrib.HUC2 is null OR attrib.HUC4 IS null OR attrib.HUC6 IS null OR attrib.HUC8 IS null) and ROWNUM < 10

CheckForMissingAttributeRows = select model_reach_id, IDENTIFIER FROM MODEL_REACH \
	WHERE sparrow_model_id = $MODEL_ID$ and model_reach_id NOT IN ( \
	select model_reach_id from model_reach_attrib ) and ROWNUM < 10

CheckForNullTerminations = select reach.IDENTIFIER \
	from model_reach_attrib attrib INNER JOIN MODEL_REACH reach ON attrib.MODEL_REACH_ID = reach.MODEL_REACH_ID \
	where reach.SPARROW_MODEL_ID = $MODEL_ID$ and \
	(attrib.SHORE_REACH IS NULL OR attrib.TERM_TRANS IS NULL OR attrib.TERM_ESTUARY IS NULL OR attrib.TERM_NONCONNECT IS NULL) and \
	ROWNUM < 10

CheckForNullGeometry = Select IDENTIFIER \
FROM model_geom_vw \
WHERE (reach_geom is null OR catch_geom is null) and sparrow_model_id = $MODEL_ID$

# Of the model reaches for which we use ENH geometry (and not model geom), are
# there any duplicated references to the ENH geom?  This would result in those
# reaches being indistinguishable on the map and during the ID operation.
CheckForDuplicateEnhIdsWithNoModelReachGeom= Select COUNT(ENH_REACH_ID) \
FROM model_reach \
WHERE sparrow_model_id = $MODEL_ID$ AND MODEL_REACH_ID NOT IN ( \
	SELECT g.MODEL_REACH_ID FROM MODEL_REACH_GEOM g INNER JOIN MODEL_REACH r ON g.MODEL_REACH_ID = r.MODEL_REACH_ID WHERE sparrow_model_id = $MODEL_ID$ \
) \
GROUP BY ENH_REACH_ID \
HAVING COUNT(ENH_REACH_ID) > 1

CheckForReachesWithNullAreas= \
SELECT \
	A.Identifier, A.tot_upstream_area, A.catch_area, A.tot_contrib_area, A.shore_reach, A.term_estuary, A.term_trans, A.term_nonconnect \
FROM model_attrib_vw A inner join model_reach R on A.model_reach_id = R.model_reach_id \
WHERE A.sparrow_model_id=$MODEL_ID$ and (A.tot_upstream_area is null or A.catch_area is null or A.tot_contrib_area is null) \
ORDER BY A.hydseq, A.identifier

CheckForShoreReachesWhereTheWatershedAreaDoesNotMatchTheCatchmentArea = \
SELECT \
	A.Identifier, A.tot_upstream_area, A.catch_area, A.shore_reach, A.term_estuary, A.term_trans, A.term_nonconnect \
FROM model_attrib_vw A inner join model_reach R on A.model_reach_id = R.model_reach_id \
WHERE A.sparrow_model_id= $MODEL_ID$ and A.shore_reach = 1 and \
	(ABS((CASE A.tot_upstream_area WHEN 0 THEN 999999999999 ELSE A.tot_upstream_area END) - (CASE A.catch_area WHEN 0 THEN 999999999999 ELSE A.catch_area END)) \
		 / (CASE A.tot_upstream_area WHEN 0 THEN 999999999999 ELSE A.tot_upstream_area END)) > .1 \
ORDER BY A.hydseq, A.identifier

CheckForNullValuesInTheBasicTopoData = \
select 	IDENTIFIER, MODEL_REACH, FNODE, TNODE, IFTRAN, ROWNUM as HYDSEQ, SHORE_REACH, FRAC \
FROM ( \
	SELECT reach.IDENTIFIER, reach.MODEL_REACH_ID as MODEL_REACH, reach.FNODE, reach.TNODE, reach.IFTRAN, attrib.SHORE_REACH, reach.FRAC \
	FROM MODEL_REACH reach INNER JOIN MODEL_REACH_ATTRIB attrib on reach.model_reach_id = attrib.model_reach_id \
	WHERE SPARROW_MODEL_ID = $MODEL_ID$ and ( \
		reach.IDENTIFIER IS NULL OR \
		reach.MODEL_REACH_ID  IS NULL OR \
		reach.FNODE IS NULL OR \
		reach.TNODE IS NULL OR \
		reach.IFTRAN IS NULL OR \
		attrib.SHORE_REACH IS NULL OR \
		reach.FRAC IS NULL \
	) \
	ORDER BY reach.HYDSEQ, reach.IDENTIFIER \
)
